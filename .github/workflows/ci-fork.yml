name: CI (Fork)

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  buildkite:
    name: "Build and Test (GPUs on Builtkite)"
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.conclusion != 'skipped' &&
      github.event.workflow_run.head_repository.full_name != github.repository

    steps:
      - name: Debug Action
        uses: hmarr/debug-action@v2.0.0

      - name: Fetch workflow conclusion
        id: workflow-conclusion
        run: |
          url -s "${{ github.event.workflow_run.jobs_url }}" > workflow_run_jobs.json
          conclusion=$(jq -r '.jobs[] | select(.name=="Build and Test") | .conclusion' workflow_run_jobs.json)
          echo "::set-output name=build-and-test::${conclusion}"
        shell: bash

      - name: Download GitHub Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Builtkite trigger artifacts
          path: artifacts

      - name: Get head ref
        id: artifacts
        run: echo "::set-output name=head_ref::$(cat artifacts/head_ref.txt)"

      - name: Trigger Buildkite Pipeline
        id: build
        uses: EnricoMi/trigger-pipeline-action@master
        # only run if CI workflow's build-and-test job succeeded and CI workflow ran on a fork
        if: >
          steps.workflow-conclusion.outputs.build-and-test == 'success'
        env:
          PIPELINE: "horovod/horovod"
          BRANCH: "${{ steps.artifacts.outputs.head_ref }}"
          MESSAGE: "GPU Tests triggered by GitHub"
          BUILDKITE_API_ACCESS_TOKEN: ${{ secrets.BUILDKITE_TOKEN }}
          BUILD_ENV_VARS: "{\"PIPELINE_MODE\": \"GPU FULL\"}"

      - name: Write Buildkite build json
        if: steps.build.outcome != 'skipped'
        run: echo "${ steps.build.outputs.json }" > buildkite.build.json

      - name: Upload Buildkite build json
        if: steps.build.outcome != 'skipped'
        uses: actions/upload-artifact@v2
        with:
          name: Builtkite build json
          path: buildkite.build.json
